[{"/home/workspace/reactjs/coding-practices/jobbyApp/src/index.js":"1","/home/workspace/reactjs/coding-practices/jobbyApp/src/App.js":"2","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Home/index.js":"3","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Jobs/index.js":"4","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/ProtectedRoute/index.js":"5","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/NotFound/index.js":"6","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Login/index.js":"7","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/JobItemDetails/index.js":"8","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Header/index.js":"9","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/FiltersGroup/index.js":"10","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/JobCard/index.js":"11","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/SkillsCard/index.js":"12","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/SimilarJobItem/index.js":"13","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/ProfileDetails/index.js":"14"},{"size":285,"mtime":1716273783253,"results":"15","hashOfConfig":"16"},{"size":847,"mtime":1716611176608,"results":"17","hashOfConfig":"16"},{"size":686,"mtime":1716610709208,"results":"18","hashOfConfig":"16"},{"size":6167,"mtime":1716904467957,"results":"19","hashOfConfig":"16"},{"size":289,"mtime":1716610709228,"results":"20","hashOfConfig":"16"},{"size":520,"mtime":1716610709218,"results":"21","hashOfConfig":"16"},{"size":2711,"mtime":1716610709218,"results":"22","hashOfConfig":"16"},{"size":7395,"mtime":1716610728198,"results":"23","hashOfConfig":"16"},{"size":2275,"mtime":1716610709208,"results":"24","hashOfConfig":"16"},{"size":3625,"mtime":1716610763090,"results":"25","hashOfConfig":"16"},{"size":1894,"mtime":1716610709208,"results":"26","hashOfConfig":"16"},{"size":364,"mtime":1716610709228,"results":"27","hashOfConfig":"16"},{"size":1554,"mtime":1716610709228,"results":"28","hashOfConfig":"16"},{"size":2432,"mtime":1716904486916,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lj3p05",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/workspace/reactjs/coding-practices/jobbyApp/src/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/App.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Home/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Jobs/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/ProtectedRoute/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/NotFound/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Login/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/JobItemDetails/index.js",["59"],"import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport {BsFillBriefcaseFill, BsStarFill} from 'react-icons/bs'\nimport {BiLinkExternal} from 'react-icons/bi'\nimport {MdLocationOn} from 'react-icons/md'\nimport Header from '../Header'\nimport SimilarJobItem from '../SimilarJobItem'\nimport SkillsCard from '../SkillsCard'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobData: {},\n    similarJobsData: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getJobsData()\n  }\n\n  getFormattedSemilarData = data => ({\n    companyLogoUrl: data.company_logo_url,\n    employmentType: data.employment_type,\n    id: data.id,\n    jobDescription: data.job_description,\n    location: data.location,\n    rating: data.rating,\n    title: data.title,\n  })\n\n  getFormattedData = data => ({\n    companyLogoUrl: data.company_logo_url,\n    companyWebsiteUrl: data.company_website_url,\n    employmentType: data.employment_type,\n    id: data.id,\n    jobDescription: data.job_description,\n    lifeAtCompany: {\n      description: data.life_at_company.description,\n      imageUrl: data.life_at_company.image_url,\n    },\n    location: data.location,\n    rating: data.rating,\n    title: data.title,\n    packagePerAnnum: data.package_per_annum,\n    skills: data.skills.map(eachSkill => ({\n      imageUrl: eachSkill.image_url,\n      name: eachSkill.name,\n    })),\n  })\n\n  getJobsData = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      header: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      console.log(data)\n      const updatedData = this.getFormattedData(data.job_details)\n      const updatedSimilarJobsData = data.similar_jobs.map(eachSimilarJob =>\n        this.getFormattedSemilarData(eachSimilarJob),\n      )\n      console.log(updatedData)\n      console.log(updatedSimilarJobsData)\n      this.setState({\n        jobData: updatedData,\n        similarJobsData: updatedSimilarJobsData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderFailureView = () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    return (\n      <div className=\"job-item-error-view-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n          alt=\"failure view\"\n          className=\"job-item-failure-img\"\n        />\n        <h1 className=\"job-item-failure-heading-text\">\n          Oops! Something Went Wrong\n        </h1>\n        <p className=\"job-item-failure-description\">\n          We cannot seem to find the page you are looking for\n        </p>\n        <button\n          type=\"button\"\n          id=\"button\"\n          className=\"job-item-failure-buttoon\"\n          onClick={this.getJobsData}\n        >\n          Retry\n        </button>\n      </div>\n    )\n  }\n\n  renderLoadingView = () => (\n    <div className=\"job-item-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobDetailsView = () => {\n    const {jobData, similarJobsData} = this.state\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      employmentType,\n      jobDescription,\n      location,\n      packagePerAnnum,\n      rating,\n      title,\n      lifeAtCompany,\n      skills,\n    } = jobData\n    const {description, imageUrl} = lifeAtCompany\n\n    return (\n      <div className=\"job-details-view-container\">\n        <div className=\"job-item\">\n          <div className=\"logo-title-location-container\">\n            <div className=\"logo-title-container\">\n              <img\n                src={companyLogoUrl}\n                alt=\"job details company logo\"\n                className=\"company-logo\"\n              />\n              <div className=\"title-rating-container\">\n                <h1 className=\"title-heading\">{title}</h1>\n                <div className=\"rating-container\">\n                  <BsStarFill className=\"rating-icon\" />\n                  <p className=\"rating-heading\">{rating}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"location-package-container\">\n              <div className=\"location-employee-container\">\n                <div className=\"location-container\">\n                  <MdLocationOn className=\"location-icon\" />\n                  <p className=\"location-heading\">{location}</p>\n                </div>\n                <div className=\"employee-type-container\">\n                  <BsFillBriefcaseFill className=\"brief-case-icon\" />\n                  <p className=\"employee-type-heading\">{employmentType}</p>\n                </div>\n              </div>\n              <p className=\"package-heading\">{packagePerAnnum}</p>\n            </div>\n          </div>\n          <hr className=\"line\" />\n          <div className=\"description-visit-container\">\n            <h1 className=\"description-heading\">Description</h1>\n            <div className=\"visit-container\">\n              <a href={companyWebsiteUrl} className=\"visit-heading\">\n                Visit\n              </a>\n              <BiLinkExternal className=\"visit-icon\" />\n            </div>\n          </div>\n          <p className=\"description--text\">{jobDescription}</p>\n          <h1 className=\"skills-heading\">Skills</h1>\n          <ul className=\"skills-list-container\">\n            {skills.map(eachSkill => (\n              <SkillsCard skillDetails={eachSkill} key={eachSkill.name} />\n            ))}\n          </ul>\n          <h1 className=\"life-at-company-heading\">Life at Company</h1>\n          <div className=\"life-at-company-description-image-container\">\n            <p className=\"life-at-company-description\">{description}</p>\n            <img\n              src={imageUrl}\n              alt=\"life at company\"\n              className=\"life-at-company-image\"\n            />\n          </div>\n        </div>\n        <h1 className=\"similar-jobs-heading\">Similar jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobsData.map(eachSimilarJob => (\n            <SimilarJobItem\n              jobDetails={eachSimilarJob}\n              key={eachSimilarJob.id}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderJobDetails = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderJobDetailsView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"job-item-details-container\">\n          {this.renderJobDetails()}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default JobItemDetails\n","/home/workspace/reactjs/coding-practices/jobbyApp/src/components/Header/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/FiltersGroup/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/JobCard/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/SkillsCard/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/SimilarJobItem/index.js",[],"/home/workspace/reactjs/coding-practices/jobbyApp/src/components/ProfileDetails/index.js",[],{"ruleId":"60","severity":1,"message":"61","line":98,"column":12,"nodeType":"62","messageId":"63","endLine":98,"endColumn":14},"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar"]